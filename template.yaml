apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: nestjs-api-template
  title: NestJS API Template
  description: A template that creates a base NestJS API
spec:
  owner: backend-devs
  type: service

  parameters:
    - title: Fill in basic information
      required:
        - name
        - title
        - description
        - url
        - insomniaUrl
      properties:
        name:
          title: Name
          type: string
          description: Project name. This will be the name of the directory and the package.
          ui:autofocus: true
        title:
          title: Title
          type: string
          description: Project name as it will appear in the catalog.
        description:
          title: Description
          type: string
          description: A short description of the project.
        url:
          title: URL
          type: string
          description: The URL where the API will be hosted.
        insomniaUrl:
          title: Insomnia URL
          type: string
          description: The URL to the Insomnia repository for this API.
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  steps:
    - id: fetch-template
      name: Fetch Template
      action: fetch:template
      input:
        url: ./content
        values:
          name: ${{ parameters.name }}
          title: ${{ parameters.title }}
          description: ${{ parameters.description }}
          url: ${{ parameters.url }}
          insomniaUrl: ${{ parameters.insomniaUrl }}
          repoUrl: ${{ parameters.repoUrl }}
          ghSecretsHost: X1 secrets.SSH_HOST X2
          ghSecretsUsername: X1 secrets.SSH_USER X2
          ghSecretsPort: X1 secrets.SSH_PORT X2
          ghSecretsKey: X1 secrets.SSH_KEY X2

    - id: publish-github
      name: Publish to Github
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: master
        repoVisibility: private

    - id: register-backstage
      name: Register on Backstage
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish-github'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  output:
    links:
      - title: Repository
        url: ${{ steps['publish-github'].output.remoteUrl }}
      - title: Catalog
        icon: catalog
        entityRef: ${{ steps['register-backstage'].output.entityRef }}
