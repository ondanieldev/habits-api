name: CI

on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Install dependencies
        run: yarn install

      - name: Check lint issues
        run: yarn lint

      - name: Generate dist folder
        run: yarn build

      - name: Copy dist to virtual machine
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST | replace("X1", "${{") | replace("X2", "}}") }}
          username: ${{ values.ghSecretsUsername | replace("X1", "${{") | replace("X2", "}}") }}
          port: ${{ values.ghSecretsPort | replace("X1", "${{") | replace("X2", "}}") }}
          key: ${{ values.ghSecretsKey | replace("X1", "${{") | replace("X2", "}}") }}
          source: '.,!node_modules'
          target: '~/www/${{ values.name }}'
          overwrite: true
          rm: true

      - name: Run production scripts
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST | replace("X1", "${{") | replace("X2", "}}") }}
          username: ${{ values.ghSecretsUsername | replace("X1", "${{") | replace("X2", "}}") }}
          port: ${{ values.ghSecretsPort | replace("X1", "${{") | replace("X2", "}}") }}
          key: ${{ values.ghSecretsKey | replace("X1", "${{") | replace("X2", "}}") }}
          script: |
            cd ~/www/${{ values.name }}
            cp ~/backup/${{ values.name }}/.env ~/www/${{ values.name }}/.env 
            yarn install
            yarn docker
